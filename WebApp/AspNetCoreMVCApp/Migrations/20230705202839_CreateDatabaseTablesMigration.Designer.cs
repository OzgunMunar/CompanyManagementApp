// <auto-generated />
using System;
using AspNetCoreMVCApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AspNetCoreMVCApp.Migrations
{
    [DbContext(typeof(MyCompanyDbContext))]
    [Migration("20230705202839_CreateDatabaseTablesMigration")]
    partial class CreateDatabaseTablesMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AspNetCoreMVCApp.Models.Customer", b =>
                {
                    b.Property<Guid>("CustomerGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerBoughtFromEmployeeGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerPhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("CustomerPostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("CustomerGuid");

                    b.HasIndex("CustomerBoughtFromEmployeeGuid");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("AspNetCoreMVCApp.Models.Employee", b =>
                {
                    b.Property<Guid>("EmployeeGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeJobGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeManagerGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeOfficeGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeePassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeePhoneNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("EmployeeStartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("EmployeeGuid");

                    b.HasIndex("EmployeeJobGuid");

                    b.HasIndex("EmployeeOfficeGuid");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("AspNetCoreMVCApp.Models.EmployeeJob", b =>
                {
                    b.Property<Guid>("EmployeeJobTitleGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeJobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("EmployeeJobTitleGuid");

                    b.ToTable("EmployeeJob");
                });

            modelBuilder.Entity("AspNetCoreMVCApp.Models.Office", b =>
                {
                    b.Property<Guid>("OfficeGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OfficeAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfficePhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("OfficePostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OfficeGuid");

                    b.ToTable("Office");
                });

            modelBuilder.Entity("AspNetCoreMVCApp.Models.Order", b =>
                {
                    b.Property<Guid>("OrderGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OrderComments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrderCustomerGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OrderIsShipped")
                        .HasColumnType("bit");

                    b.HasKey("OrderGuid");

                    b.HasIndex("OrderCustomerGuid");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("AspNetCoreMVCApp.Models.Customer", b =>
                {
                    b.HasOne("AspNetCoreMVCApp.Models.Employee", "Employees")
                        .WithMany("Customers")
                        .HasForeignKey("CustomerBoughtFromEmployeeGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("AspNetCoreMVCApp.Models.Employee", b =>
                {
                    b.HasOne("AspNetCoreMVCApp.Models.EmployeeJob", "EmployeeJob")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeJobGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspNetCoreMVCApp.Models.Office", "Office")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeOfficeGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeJob");

                    b.Navigation("Office");
                });

            modelBuilder.Entity("AspNetCoreMVCApp.Models.Order", b =>
                {
                    b.HasOne("AspNetCoreMVCApp.Models.Customer", "Customers")
                        .WithMany("Orders")
                        .HasForeignKey("OrderCustomerGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("AspNetCoreMVCApp.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("AspNetCoreMVCApp.Models.Employee", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("AspNetCoreMVCApp.Models.EmployeeJob", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("AspNetCoreMVCApp.Models.Office", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
